// Copyright (c) 2021 Jose Torres. All rights reserved. Licensed under the Apache License, Version 2.0. See LICENSE.md file in the project root for full license information.
// <auto-generated>

namespace AudioDeviceSwitcher.Interop;

using System.Runtime.InteropServices;
using HRESULT = System.Int32;

public enum ERole
{
    eConsole = 0,
    eMultimedia = 1,
    eCommunications = 2,
}

public enum EDataFlow
{
    eRender = 0,
    eCapture = 1,
    eAll = 2,
}

public enum MMDeviceState
{
    Active = 0x00000001,
    Disabled = 0x00000002,
    NotPresent = 0x00000004,
    Unplugged = 0x00000008,
    All = 0x0000000f,
}

[Guid("F8679F50-850A-41CF-9C72-430F290290C8")]
[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
public interface IPolicyConfig
{
    HRESULT _GetMixFormat();
    HRESULT _GetDeviceFormat();
    HRESULT _ResetDeviceFormat();
    HRESULT _SetDeviceFormat();
    HRESULT _GetProcessingPeriod();
    HRESULT _SetProcessingPeriod();
    HRESULT _GetShareMode();
    HRESULT _SetShareMode();
    HRESULT _GetPropertyValue();
    HRESULT _SetPropertyValue();
    HRESULT SetDefaultEndpoint(string deviceId, ERole role);
    HRESULT SetEndpointVisibility(string deviceId, int value);
}

[ComImport]
[Guid("870AF99C-171D-4F9E-AF0D-E63DF40C2BC9")]
public sealed class PolicyConfig
{
}

[Guid("D666063F-1587-4E43-81F1-B948E807363F")]
[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
public unsafe interface IMMDevice
{
    public HRESULT Activate(ref Guid id, uint dwClsCtx, IntPtr pActivationParams, [MarshalAs(UnmanagedType.IUnknown)] out object ppInterface);
    public HRESULT OpenPropertyStore(uint stgmAccess, out object ppProperties);
    public HRESULT GetId([MarshalAs(UnmanagedType.LPWStr)] out string id);
    public HRESULT GetState(out MMDeviceState pdwState);
};

[Guid("0BD7A1BE-7A1A-44DB-8397-CC5392387B5E")]
[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
public unsafe interface IMMDeviceCollection
{
    public HRESULT GetCount(out uint pcDevices);
    public HRESULT Item(uint nDevice, out IMMDevice ppDevice);
};

[Guid("A95664D2-9614-4F35-A746-DE8DB63617E6")]
[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
public unsafe interface IMMDeviceEnumerator
{
    public HRESULT EnumAudioEndpoints(EDataFlow dataFlow, uint dwStateMask, out IMMDeviceCollection ppDevices);
    public HRESULT GetDefaultAudioEndpoint(EDataFlow dataFlow, ERole role, out IMMDevice ppEndpoint);
    public HRESULT GetDevice(string id, out IMMDevice device);
}

[ComImport]
[Guid("BCDE0395-E52F-467C-8E3D-C4579291692E")]
public sealed class MMDeviceEnumerator
{
}
